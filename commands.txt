GIT CMDS 

git checkout -b OTN_R0.8_Clients  ( making new branch) 
git add filenames     ( add new files to branch)
git commit -m "CCL/Bridge structure update for client protocols"
git push origin OTN_R0.8_Clients
git branch -a       ( to check for branches)
git status   ( untracked or modified file check)
git checkout OTN_R0.8_Alarm ( switch branch)
git pull origin OTN_R0.8_Alarm ( pull the new code from OTN_R0.8_Alarm branch)
git merge origin/OTN_R0.8_Alarm

top-exec git pull branchname  ( pull the code from the branchname)

git stash    ( stash the local changes to pull the code)
git pull
git stash apply  ( apply the stashed changes)


CREATE NEW REPO with name padtec.es.otns.common.scripts

mkdir -p /repositories/repo/es/otns/common/scripts.git
git init --bare --shared /repositories/repo/es/otns/common/scripts.git
chmod -R g+swX /repositories/repo/es/otns/common/scripts.git
chgrp -R otndev /repositories/repo/es/otns/common/scripts.git

git clone ssh://dheeraj@172.19.79.132/repositories/repo/hw/proj/otns/l2c2x100g/fpgagcc.git padtec.hw.proj.otns.l2c2x100g.fpgagcc
cd repo_name
git remote add gerrit ssh://tc.nikhil.bhatia@gerrit.padtec.com.br:29418/ hw/proj/otns/l2c2x100g/fpgagcc.git
Check git remote -v that git and geerit both are present
cp ../padtec.fw.lib.rpc.mi.protocol.id.control/.gitignore . < --- This is needed to ignore repos which should not get checkin
git add .
git config user.name "username"
git config user.email "useremail"
git checkout -b master
git commit -m "added .gitignore"
git push origin master
git checkout -b ots/R1.1
git push origin ots/R1.1

After this branch will be created on Git (132 mchine)

git pull gerrit ots/R1.1
git push origin ots/R1.1

Repo contents will be pushed from gerrit to Git

Modify topbuild.repos.map and add newly added repo there.(devtools/repos.git)
topbuild.repos.map should be pulled on the machine where compilation is to be done.
